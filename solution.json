{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.1.55165",
      "templateHash": "1356725422016605653"
    }
  },
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/jamasten/FSLogixRemoveExpiredProfiles/main/artifacts/",
      "metadata": {
        "description": "The URL prefix for remote assets."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "The SAS Token for the scripts if they are stored on an Azure Storage Account."
      }
    },
    "AutomationAccountName": {
      "type": "string",
      "defaultValue": "aa-fslogix-mgmt",
      "metadata": {
        "description": "The name of the Azure Automation account."
      }
    },
    "DeleteOlderThanDays": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The amount of days to keep an unused FSLogix profile before deleting it."
      }
    },
    "DiskName": {
      "type": "string",
      "defaultValue": "disk-fslogix-mgmt",
      "metadata": {
        "description": "The name of the managed disk on the Azure virtual machine"
      }
    },
    "FileShareResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource IDs of the files shares containing the FSLogix profile and / or ODFC containers."
      }
    },
    "Frequency": {
      "type": "string",
      "defaultValue": "Daily",
      "metadata": {
        "description": "The frequency in which to check for expired VHDs."
      },
      "allowedValues": [
        "Daily",
        "Weekly",
        "Monthly"
      ]
    },
    "HybridUseBenefit": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Choose whether to enable the Hybrid Use Benefit on the virtual machine.  This is only valid you have appropriate licensing with Software Assurance. https://docs.microsoft.com/en-us/windows-server/get-started/azure-hybrid-benefit"
      }
    },
    "KeyVaultName": {
      "type": "string",
      "defaultValue": "kv-fslogix-mgmt",
      "metadata": {
        "description": "The name of the Azure key vault."
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "The deployment location for the solution."
      }
    },
    "LogAnalyticsWorkspaceResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID for the Log Analytics Workspace to collect log data and send alerts."
      }
    },
    "NicName": {
      "type": "string",
      "defaultValue": "nic-fslogix-mgmt",
      "metadata": {
        "description": "The name of the network interface on the Azure virtual machine."
      }
    },
    "ResourceGroupName": {
      "type": "string",
      "defaultValue": "rg-fslogix-mgmt",
      "metadata": {
        "description": "The name of the Azure resource group."
      }
    },
    "SubnetName": {
      "type": "string",
      "metadata": {
        "description": "The subnet for the AVD session hosts."
      }
    },
    "Tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Add key / value pairs to include metadata on the Azure resources."
      }
    },
    "TemplateSpecName": {
      "type": "string",
      "defaultValue": "ts-fslogix-mgmt",
      "metadata": {
        "description": "The name of the Azure template spec."
      }
    },
    "Timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyyyMMddhhmmss')]",
      "metadata": {
        "description": "DO NOT MODIFY THIS VALUE! The timestamp is needed to differentiate deployments for certain Azure resources and must be set using a parameter."
      }
    },
    "UserAssignedIdentityName": {
      "type": "string",
      "defaultValue": "uai-fslogix-mgmt",
      "metadata": {
        "description": "The name of the Azure user assigned managed identity."
      }
    },
    "VirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Virtual network for the virtual machine to run the tool."
      }
    },
    "VirtualNetworkResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Virtual network resource group for the virtual machine to run the tool."
      }
    },
    "VmName": {
      "type": "string",
      "defaultValue": "vm-fslogix-mgmt",
      "metadata": {
        "description": "The name of the Azure virtual machine."
      }
    },
    "VmPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The local administrator password for the virtual machine."
      }
    },
    "VmSize": {
      "type": "string",
      "defaultValue": "Standard_D4ds_v5",
      "metadata": {
        "description": "The size of the virutal machine that will process the Azure Files shares."
      }
    },
    "VmUsername": {
      "type": "securestring",
      "metadata": {
        "description": "The local administrator username for the virtual machine."
      }
    }
  },
  "variables": {
    "RoleAssignmentResourceGroups": [
      "[parameters('ResourceGroupName')]",
      "[parameters('VirtualNetworkResourceGroupName')]"
    ],
    "RoleDefinitionIds": {
      "ManagedIdentityOperator": "f1a07417-d97a-45cb-824c-7a7467783830",
      "Reader": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
      "ReaderAndDataAccess": "c12c1c16-33a1-487b-954d-41c89c60f349",
      "VirtualMachineContributor": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
    },
    "RunbookName": "Remove-ExpiredFslogixDisks",
    "RunbookScriptName": "New-VirtualMachineDeployment.ps1",
    "TimeZone": "[variables('TimeZones')[parameters('Location')]]",
    "TimeZones": {
      "australiacentral": "AUS Eastern Standard Time",
      "australiacentral2": "AUS Eastern Standard Time",
      "australiaeast": "AUS Eastern Standard Time",
      "australiasoutheast": "AUS Eastern Standard Time",
      "brazilsouth": "E. South America Standard Time",
      "brazilsoutheast": "E. South America Standard Time",
      "canadacentral": "Eastern Standard Time",
      "canadaeast": "Eastern Standard Time",
      "centralindia": "India Standard Time",
      "centralus": "Central Standard Time",
      "chinaeast": "China Standard Time",
      "chinaeast2": "China Standard Time",
      "chinanorth": "China Standard Time",
      "chinanorth2": "China Standard Time",
      "eastasia": "China Standard Time",
      "eastus": "Eastern Standard Time",
      "eastus2": "Eastern Standard Time",
      "francecentral": "Central Europe Standard Time",
      "francesouth": "Central Europe Standard Time",
      "germanynorth": "Central Europe Standard Time",
      "germanywestcentral": "Central Europe Standard Time",
      "japaneast": "Tokyo Standard Time",
      "japanwest": "Tokyo Standard Time",
      "jioindiacentral": "India Standard Time",
      "jioindiawest": "India Standard Time",
      "koreacentral": "Korea Standard Time",
      "koreasouth": "Korea Standard Time",
      "northcentralus": "Central Standard Time",
      "northeurope": "GMT Standard Time",
      "norwayeast": "Central Europe Standard Time",
      "norwaywest": "Central Europe Standard Time",
      "southafricanorth": "South Africa Standard Time",
      "southafricawest": "South Africa Standard Time",
      "southcentralus": "Central Standard Time",
      "southindia": "India Standard Time",
      "southeastasia": "Singapore Standard Time",
      "swedencentral": "Central Europe Standard Time",
      "switzerlandnorth": "Central Europe Standard Time",
      "switzerlandwest": "Central Europe Standard Time",
      "uaecentral": "Arabian Standard Time",
      "uaenorth": "Arabian Standard Time",
      "uksouth": "GMT Standard Time",
      "ukwest": "GMT Standard Time",
      "usdodcentral": "Central Standard Time",
      "usdodeast": "Eastern Standard Time",
      "usgovarizona": "Mountain Standard Time",
      "usgoviowa": "Central Standard Time",
      "usgovtexas": "Central Standard Time",
      "usgovvirginia": "Eastern Standard Time",
      "westcentralus": "Mountain Standard Time",
      "westeurope": "Central Europe Standard Time",
      "westindia": "India Standard Time",
      "westus": "Pacific Standard Time",
      "westus2": "Pacific Standard Time",
      "westus3": "Mountain Standard Time"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2022-04-01",
      "name": "[guid(subscription().id, 'CaseWorkerDeploy')]",
      "properties": {
        "roleName": "[format('KeyVaultDeployAction_{0}', subscription().subscriptionId)]",
        "description": "Allows a principal to get but not view Key Vault secrets for an ARM template deployment.",
        "assignableScopes": [
          "[subscription().id]"
        ],
        "permissions": [
          {
            "actions": [
              "Microsoft.KeyVault/vaults/deploy/action"
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2019-10-01",
      "name": "[parameters('ResourceGroupName')]",
      "location": "[parameters('Location')]",
      "tags": "[parameters('Tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('UserAssignedIdentityName_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "UserAssignedIdentityName": {
            "value": "[parameters('UserAssignedIdentityName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.1.55165",
              "templateHash": "4789894668860949867"
            }
          },
          "parameters": {
            "Location": {
              "type": "string"
            },
            "UserAssignedIdentityName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[parameters('UserAssignedIdentityName')]",
              "location": "[parameters('Location')]"
            }
          ],
          "outputs": {
            "ClientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('UserAssignedIdentityName')), '2018-11-30').clientId]"
            },
            "PrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('UserAssignedIdentityName')), '2018-11-30').principalId]"
            },
            "ResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('UserAssignedIdentityName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('ResourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('TemplateSpec_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "TemplateSpecName": {
            "value": "[parameters('TemplateSpecName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.1.55165",
              "templateHash": "18254137260717774898"
            }
          },
          "parameters": {
            "Location": {
              "type": "string"
            },
            "TemplateSpecName": {
              "type": "string"
            }
          },
          "variables": {
            "$fxv#0": {
              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "metadata": {
                "_generator": {
                  "name": "bicep",
                  "version": "0.16.1.55165",
                  "templateHash": "8731387486089427262"
                }
              },
              "parameters": {
                "DeleteOlderThanDays": {
                  "type": "int"
                },
                "DiskName": {
                  "type": "string"
                },
                "FileShareResourceIds": {
                  "type": "array"
                },
                "HybridUseBenefit": {
                  "type": "bool"
                },
                "KeyVaultName": {
                  "type": "string"
                },
                "Location": {
                  "type": "string",
                  "defaultValue": "[[resourceGroup().location]"
                },
                "NicName": {
                  "type": "string"
                },
                "SasToken": {
                  "type": "bool"
                },
                "ScriptUri": {
                  "type": "string"
                },
                "SubnetName": {
                  "type": "string"
                },
                "Tags": {
                  "type": "object",
                  "defaultValue": {}
                },
                "Timestamp": {
                  "type": "string",
                  "defaultValue": "[[utcNow('yyyyMMddhhmmss')]"
                },
                "UserAssignedIdentityClientId": {
                  "type": "string"
                },
                "UserAssignedIdentityResourceId": {
                  "type": "string"
                },
                "VirtualNetworkName": {
                  "type": "string"
                },
                "VirtualNetworkResourceGroupName": {
                  "type": "string"
                },
                "VmName": {
                  "type": "string"
                },
                "VmSize": {
                  "type": "string"
                }
              },
              "resources": [
                {
                  "type": "Microsoft.Resources/deployments",
                  "apiVersion": "2022-09-01",
                  "name": "[[format('VirtualMachine_{0}', parameters('Timestamp'))]",
                  "properties": {
                    "expressionEvaluationOptions": {
                      "scope": "inner"
                    },
                    "mode": "Incremental",
                    "parameters": {
                      "SasToken": "[[if(parameters('SasToken'), createObject('reference', createObject('keyVault', createObject('id', resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))), 'secretName', 'SasToken')), createObject('value', ''))]",
                      "DeleteOlderThanDays": {
                        "value": "[[parameters('DeleteOlderThanDays')]"
                      },
                      "DiskName": {
                        "value": "[[parameters('DiskName')]"
                      },
                      "FileShareResourceIds": {
                        "value": "[[parameters('FileShareResourceIds')]"
                      },
                      "HybridUseBenefit": {
                        "value": "[[parameters('HybridUseBenefit')]"
                      },
                      "Location": {
                        "value": "[[parameters('Location')]"
                      },
                      "NicName": {
                        "value": "[[parameters('NicName')]"
                      },
                      "ScriptUri": {
                        "value": "[[parameters('ScriptUri')]"
                      },
                      "SubnetName": {
                        "value": "[[parameters('SubnetName')]"
                      },
                      "Tags": {
                        "value": "[[parameters('Tags')]"
                      },
                      "Timestamp": {
                        "value": "[[parameters('Timestamp')]"
                      },
                      "UserAssignedIdentityClientId": {
                        "value": "[[parameters('UserAssignedIdentityClientId')]"
                      },
                      "UserAssignedIdentityResourceId": {
                        "value": "[[parameters('UserAssignedIdentityResourceId')]"
                      },
                      "VirtualNetworkName": {
                        "value": "[[parameters('VirtualNetworkName')]"
                      },
                      "VirtualNetworkResourceGroupName": {
                        "value": "[[parameters('VirtualNetworkResourceGroupName')]"
                      },
                      "VmName": {
                        "value": "[[parameters('VmName')]"
                      },
                      "VmPassword": {
                        "reference": {
                          "keyVault": {
                            "id": "[[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
                          },
                          "secretName": "VmPassword"
                        }
                      },
                      "VmSize": {
                        "value": "[[parameters('VmSize')]"
                      },
                      "VmUsername": {
                        "reference": {
                          "keyVault": {
                            "id": "[[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
                          },
                          "secretName": "VmUsername"
                        }
                      }
                    },
                    "template": {
                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                      "contentVersion": "1.0.0.0",
                      "metadata": {
                        "_generator": {
                          "name": "bicep",
                          "version": "0.16.1.55165",
                          "templateHash": "15744933279881007180"
                        }
                      },
                      "parameters": {
                        "DeleteOlderThanDays": {
                          "type": "int"
                        },
                        "DiskName": {
                          "type": "string"
                        },
                        "FileShareResourceIds": {
                          "type": "array"
                        },
                        "HybridUseBenefit": {
                          "type": "bool"
                        },
                        "Location": {
                          "type": "string"
                        },
                        "NicName": {
                          "type": "string"
                        },
                        "SasToken": {
                          "type": "securestring"
                        },
                        "ScriptUri": {
                          "type": "string"
                        },
                        "SubnetName": {
                          "type": "string"
                        },
                        "Tags": {
                          "type": "object"
                        },
                        "Timestamp": {
                          "type": "string"
                        },
                        "UserAssignedIdentityClientId": {
                          "type": "string"
                        },
                        "UserAssignedIdentityResourceId": {
                          "type": "string"
                        },
                        "VirtualNetworkName": {
                          "type": "string"
                        },
                        "VirtualNetworkResourceGroupName": {
                          "type": "string"
                        },
                        "VmName": {
                          "type": "string"
                        },
                        "VmPassword": {
                          "type": "securestring"
                        },
                        "VmSize": {
                          "type": "string"
                        },
                        "VmUsername": {
                          "type": "securestring"
                        }
                      },
                      "variables": {
                        "StorageAccountSuffix": "[[environment().suffixes.storage]"
                      },
                      "resources": [
                        {
                          "type": "Microsoft.Network/networkInterfaces",
                          "apiVersion": "2020-05-01",
                          "name": "[[parameters('NicName')]",
                          "location": "[[parameters('Location')]",
                          "tags": "[[parameters('Tags')]",
                          "properties": {
                            "ipConfigurations": [
                              {
                                "name": "ipconfig",
                                "properties": {
                                  "privateIPAllocationMethod": "Dynamic",
                                  "subnet": {
                                    "id": "[[resourceId(parameters('VirtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetworkName'), parameters('SubnetName'))]"
                                  },
                                  "primary": true,
                                  "privateIPAddressVersion": "IPv4"
                                }
                              }
                            ],
                            "enableAcceleratedNetworking": true,
                            "enableIPForwarding": false
                          }
                        },
                        {
                          "type": "Microsoft.Compute/virtualMachines",
                          "apiVersion": "2021-11-01",
                          "name": "[[parameters('VmName')]",
                          "location": "[[parameters('Location')]",
                          "tags": "[[parameters('Tags')]",
                          "identity": {
                            "type": "UserAssigned",
                            "userAssignedIdentities": {
                              "[[format('{0}', parameters('UserAssignedIdentityResourceId'))]": {}
                            }
                          },
                          "properties": {
                            "hardwareProfile": {
                              "vmSize": "[[parameters('VmSize')]"
                            },
                            "storageProfile": {
                              "imageReference": {
                                "publisher": "MicrosoftWindowsServer",
                                "offer": "WindowsServer",
                                "sku": "2019-Datacenter",
                                "version": "latest"
                              },
                              "osDisk": {
                                "deleteOption": "Delete",
                                "osType": "Windows",
                                "createOption": "FromImage",
                                "caching": "ReadWrite",
                                "managedDisk": {
                                  "storageAccountType": "Premium_LRS"
                                },
                                "name": "[[parameters('DiskName')]"
                              },
                              "dataDisks": []
                            },
                            "osProfile": {
                              "computerName": "[[parameters('VmName')]",
                              "adminUsername": "[[parameters('VmUsername')]",
                              "adminPassword": "[[parameters('VmPassword')]",
                              "windowsConfiguration": {
                                "provisionVMAgent": true,
                                "enableAutomaticUpdates": false
                              },
                              "secrets": [],
                              "allowExtensionOperations": true
                            },
                            "networkProfile": {
                              "networkInterfaces": [
                                {
                                  "id": "[[resourceId('Microsoft.Network/networkInterfaces', parameters('NicName'))]",
                                  "properties": {
                                    "deleteOption": "Delete"
                                  }
                                }
                              ]
                            },
                            "diagnosticsProfile": {
                              "bootDiagnostics": {
                                "enabled": false
                              }
                            },
                            "licenseType": "[[if(parameters('HybridUseBenefit'), 'Windows_Server', null())]"
                          },
                          "dependsOn": [
                            "[[resourceId('Microsoft.Network/networkInterfaces', parameters('NicName'))]"
                          ]
                        },
                        {
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2021-03-01",
                          "name": "[[format('{0}/{1}', parameters('VmName'), 'CustomScriptExtension')]",
                          "location": "[[parameters('Location')]",
                          "tags": "[[parameters('Tags')]",
                          "properties": {
                            "publisher": "Microsoft.Compute",
                            "type": "CustomScriptExtension",
                            "typeHandlerVersion": "1.10",
                            "autoUpgradeMinorVersion": true,
                            "settings": {
                              "fileUris": [
                                "[[format('{0}Remove-ExpiredFslogixDisks.ps1{1}', parameters('ScriptUri'), parameters('SasToken'))]"
                              ],
                              "timestamp": "[[parameters('Timestamp')]"
                            },
                            "protectedSettings": {
                              "commandToExecute": "[[format('powershell -ExecutionPolicy Unrestricted -File Remove-ExpiredFslogixDisks.ps1 -DeleteOlderThanDays {0} -Environment {1} -FileShareResourceIds {2} -StorageAccountSuffix {3} -SubscriptionId {4} -TenantId {5} -UserAssignedIdentityClientId {6}', parameters('DeleteOlderThanDays'), environment().name, parameters('FileShareResourceIds'), variables('StorageAccountSuffix'), subscription().subscriptionId, subscription().tenantId, parameters('UserAssignedIdentityClientId'))]"
                            }
                          },
                          "dependsOn": [
                            "[[resourceId('Microsoft.Compute/virtualMachines', parameters('VmName'))]"
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/templateSpecs",
              "apiVersion": "2021-05-01",
              "name": "[parameters('TemplateSpecName')]",
              "location": "[parameters('Location')]",
              "properties": {
                "description": "Deploys a virtual machine to run the \"FSLogix Disk Shrink\" tool against an SMB share containing FSLogix profile containers.",
                "displayName": "FSLogix Disk Shrink solution"
              }
            },
            {
              "type": "Microsoft.Resources/templateSpecs/versions",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', parameters('TemplateSpecName'), '1.0')]",
              "location": "[parameters('Location')]",
              "properties": {
                "mainTemplate": "[variables('$fxv#0')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', parameters('TemplateSpecName'))]"
              ]
            }
          ],
          "outputs": {
            "VersionResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Resources/templateSpecs/versions', parameters('TemplateSpecName'), '1.0')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('ResourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('AutomationAccount_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "AutomationAccountName": {
            "value": "[parameters('AutomationAccountName')]"
          },
          "DeleteOlderThanDays": {
            "value": "[parameters('DeleteOlderThanDays')]"
          },
          "DiskName": {
            "value": "[parameters('DiskName')]"
          },
          "FileShareResourceId": {
            "value": "[parameters('FileShareResourceId')]"
          },
          "Frequency": {
            "value": "[parameters('Frequency')]"
          },
          "HybridUseBenefit": {
            "value": "[parameters('HybridUseBenefit')]"
          },
          "KeyVaultName": {
            "value": "[parameters('KeyVaultName')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LogAnalyticsWorkspaceResourceId": {
            "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
          },
          "NicName": {
            "value": "[parameters('NicName')]"
          },
          "RoleAssignmentResourceGroups": {
            "value": "[variables('RoleAssignmentResourceGroups')]"
          },
          "RoleDefinitionIds": {
            "value": "[variables('RoleDefinitionIds')]"
          },
          "RunbookName": {
            "value": "[variables('RunbookName')]"
          },
          "RunbookScriptName": {
            "value": "[variables('RunbookScriptName')]"
          },
          "SubnetName": {
            "value": "[parameters('SubnetName')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          },
          "TemplateSpecVersionResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('TemplateSpec_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VersionResourceId.value]"
          },
          "TimeZone": {
            "value": "[variables('TimeZone')]"
          },
          "UserAssignedIdentityClientId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('UserAssignedIdentityName_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ClientId.value]"
          },
          "UserAssignedIdentityResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('UserAssignedIdentityName_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceId.value]"
          },
          "VirtualNetworkName": {
            "value": "[parameters('VirtualNetworkName')]"
          },
          "VirtualNetworkResourceGroupName": {
            "value": "[parameters('VirtualNetworkResourceGroupName')]"
          },
          "VmName": {
            "value": "[parameters('VmName')]"
          },
          "VmSize": {
            "value": "[parameters('VmSize')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.1.55165",
              "templateHash": "5937121850418991194"
            }
          },
          "parameters": {
            "_artifactsLocation": {
              "type": "string"
            },
            "_artifactsLocationSasToken": {
              "type": "securestring"
            },
            "AutomationAccountName": {
              "type": "string"
            },
            "DeleteOlderThanDays": {
              "type": "int"
            },
            "DiskName": {
              "type": "string"
            },
            "FileShareResourceId": {
              "type": "string"
            },
            "Frequency": {
              "type": "string"
            },
            "HybridUseBenefit": {
              "type": "bool"
            },
            "JobScheduleName": {
              "type": "string",
              "defaultValue": "[newGuid()]"
            },
            "KeyVaultName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceResourceId": {
              "type": "string"
            },
            "NicName": {
              "type": "string"
            },
            "RoleAssignmentResourceGroups": {
              "type": "array"
            },
            "RoleDefinitionIds": {
              "type": "object"
            },
            "RunbookName": {
              "type": "string"
            },
            "RunbookScriptName": {
              "type": "string"
            },
            "SubnetName": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "TemplateSpecVersionResourceId": {
              "type": "string"
            },
            "Time": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            },
            "TimeZone": {
              "type": "string"
            },
            "UserAssignedIdentityClientId": {
              "type": "string"
            },
            "UserAssignedIdentityResourceId": {
              "type": "string"
            },
            "VirtualNetworkName": {
              "type": "string"
            },
            "VirtualNetworkResourceGroupName": {
              "type": "string"
            },
            "VmName": {
              "type": "string"
            },
            "VmSize": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Automation/automationAccounts",
              "apiVersion": "2021-06-22",
              "name": "[parameters('AutomationAccountName')]",
              "location": "[parameters('Location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "sku": {
                  "name": "Free"
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts/runbooks",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), parameters('RunbookName'))]",
              "location": "[parameters('Location')]",
              "properties": {
                "description": "FSLogix Disk Shrink Automation",
                "runbookType": "PowerShell",
                "logProgress": false,
                "logVerbose": false,
                "logActivityTrace": 0,
                "publishContentLink": {
                  "uri": "[format('{0}{1}{2}', parameters('_artifactsLocation'), parameters('RunbookScriptName'), parameters('_artifactsLocationSasToken'))]",
                  "version": "1.0.0.0"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/schedules",
              "apiVersion": "2022-08-08",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), format('{0}_{1}', parameters('RunbookName'), parameters('Frequency')))]",
              "properties": {
                "frequency": "[if(equals(parameters('Frequency'), 'Monthly'), 'Month', if(equals(parameters('Frequency'), 'Weekly'), 'Week', 'Day'))]",
                "interval": 1,
                "startTime": "[dateTimeAdd(parameters('Time'), 'PT15M')]",
                "timeZone": "[parameters('TimeZone')]",
                "advancedSchedule": "[if(equals(parameters('Frequency'), 'Monthly'), createObject('monthlyOccurrences', createArray(createObject('day', 'Saturday', 'occurrence', -1))), if(equals(parameters('Frequency'), 'Weekly'), createObject('weekDays', createArray('Saturday')), null()))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/jobSchedules",
              "apiVersion": "2022-08-08",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), parameters('JobScheduleName'))]",
              "properties": {
                "parameters": {
                  "DeleteOlderThanDays": "[string(parameters('DeleteOlderThanDays'))]",
                  "DiskName": "[parameters('DiskName')]",
                  "EnvironmentName": "[environment().name]",
                  "FileShareResourceId": "[parameters('FileShareResourceId')]",
                  "HybridUseBenefit": "[string(parameters('HybridUseBenefit'))]",
                  "KeyVaultName": "[parameters('KeyVaultName')]",
                  "NicName": "[parameters('NicName')]",
                  "ResourceGroupName": "[resourceGroup().name]",
                  "SasToken": "[if(empty(parameters('_artifactsLocationSasToken')), 'false', 'true')]",
                  "ScriptUri": "[parameters('_artifactsLocation')]",
                  "SubnetName": "[parameters('SubnetName')]",
                  "SubscriptionId": "[subscription().subscriptionId]",
                  "Tags": "[if(empty(parameters('Tags')), 'None', string(parameters('Tags')))]",
                  "TemplateSpecId": "[parameters('TemplateSpecVersionResourceId')]",
                  "TenantId": "[subscription().tenantId]",
                  "UserAssignedIdentityClientId": "[parameters('UserAssignedIdentityClientId')]",
                  "UserAssignedIdentityResourceId": "[parameters('UserAssignedIdentityResourceId')]",
                  "VirtualNetworkName": "[parameters('VirtualNetworkName')]",
                  "VirtualNetworkResourceGroupName": "[parameters('VirtualNetworkResourceGroupName')]",
                  "VmName": "[parameters('VmName')]",
                  "VmSize": "[parameters('VmSize')]"
                },
                "runbook": {
                  "name": "[parameters('RunbookName')]"
                },
                "schedule": {
                  "name": "[format('{0}_{1}', parameters('RunbookName'), parameters('Frequency'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('AutomationAccountName'), parameters('RunbookName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/schedules', parameters('AutomationAccountName'), format('{0}_{1}', parameters('RunbookName'), parameters('Frequency')))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('LogAnalyticsWorkspaceResourceId')))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2017-05-01-preview",
              "scope": "[format('Microsoft.Automation/automationAccounts/{0}', parameters('AutomationAccountName'))]",
              "name": "[format('diag-{0}', parameters('AutomationAccountName'))]",
              "properties": {
                "logs": [
                  {
                    "category": "JobLogs",
                    "enabled": true
                  },
                  {
                    "category": "JobStreams",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), parameters('RoleDefinitionIds').Reader, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionIds').Reader)]",
                "principalId": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2021-06-22', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), parameters('RoleDefinitionIds').ManagedIdentityOperator, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionIds').ManagedIdentityOperator)]",
                "principalId": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2021-06-22', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
              ]
            },
            {
              "copy": {
                "name": "roleAssignments_VirtualMachineContributor",
                "count": "[length(range(0, length(parameters('RoleAssignmentResourceGroups'))))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('RoleAssignment_{0}', parameters('RoleAssignmentResourceGroups')[range(0, length(parameters('RoleAssignmentResourceGroups')))[copyIndex()]])]",
              "resourceGroup": "[parameters('RoleAssignmentResourceGroups')[range(0, length(parameters('RoleAssignmentResourceGroups')))[copyIndex()]]]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "PrincipalId": {
                    "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2021-06-22', 'full').identity.principalId]"
                  },
                  "RoleDefinitionId": {
                    "value": "[parameters('RoleDefinitionIds').VirtualMachineContributor]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.1.55165",
                      "templateHash": "9766569436966301097"
                    }
                  },
                  "parameters": {
                    "PrincipalId": {
                      "type": "string"
                    },
                    "RoleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-10-01-preview",
                      "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                        "principalId": "[parameters('PrincipalId')]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "PrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2021-06-22', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('ResourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('TemplateSpec_{0}', parameters('Timestamp')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('UserAssignedIdentityName_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('KeyVault_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "AutomationAccountPrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('AutomationAccount_{0}', parameters('Timestamp'))), '2022-09-01').outputs.PrincipalId.value]"
          },
          "KeyVaultName": {
            "value": "[parameters('KeyVaultName')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "RoleDefinitionId": {
            "value": "[guid(subscription().id, 'CaseWorkerDeploy')]"
          },
          "SasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "VmPassword": {
            "value": "[parameters('VmPassword')]"
          },
          "VmUsername": {
            "value": "[parameters('VmUsername')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.1.55165",
              "templateHash": "1528713095736407423"
            }
          },
          "parameters": {
            "AutomationAccountPrincipalId": {
              "type": "string"
            },
            "KeyVaultName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "RoleDefinitionId": {
              "type": "string"
            },
            "SasToken": {
              "type": "string"
            },
            "VmPassword": {
              "type": "securestring"
            },
            "VmUsername": {
              "type": "securestring"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-10-01",
              "name": "[parameters('KeyVaultName')]",
              "location": "[parameters('Location')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": false,
                "enableRbacAuthorization": true,
                "enableSoftDelete": false,
                "publicNetworkAccess": "Enabled"
              }
            },
            {
              "condition": "[not(empty(parameters('SasToken')))]",
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/{1}', parameters('KeyVaultName'), 'SasToken')]",
              "properties": {
                "value": "[parameters('SasToken')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/{1}', parameters('KeyVaultName'), 'VmPassword')]",
              "properties": {
                "value": "[parameters('VmPassword')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/{1}', parameters('KeyVaultName'), 'VmUsername')]",
              "properties": {
                "value": "[parameters('VmUsername')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('KeyVaultName'))]",
              "name": "[guid(parameters('AutomationAccountPrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                "principalId": "[parameters('AutomationAccountPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('AutomationAccount_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('ResourceGroupName'))]",
        "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', guid(subscription().id, 'CaseWorkerDeploy'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('RoleAssignment_{0}', split(parameters('FileShareResourceId'), '/')[4])]",
      "resourceGroup": "[split(parameters('FileShareResourceId'), '/')[4]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "PrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('UserAssignedIdentityName_{0}', parameters('Timestamp'))), '2022-09-01').outputs.PrincipalId.value]"
          },
          "RoleDefinitionId": {
            "value": "[variables('RoleDefinitionIds').ReaderAndDataAccess]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.1.55165",
              "templateHash": "9766569436966301097"
            }
          },
          "parameters": {
            "PrincipalId": {
              "type": "string"
            },
            "RoleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                "principalId": "[parameters('PrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('UserAssignedIdentityName_{0}', parameters('Timestamp')))]"
      ]
    }
  ]
}