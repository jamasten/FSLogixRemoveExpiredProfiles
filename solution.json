{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.1.55165",
      "templateHash": "12289724244373485022"
    }
  },
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/jamasten/FSLogixRemoveExpiredProfiles/main/artifacts/",
      "metadata": {
        "description": "The URL prefix for remote assets."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "The SAS Token for the scripts if they are stored on an Azure Storage Account."
      }
    },
    "DeleteOlderThanDays": {
      "type": "int",
      "metadata": {
        "description": "The amount of days to keep an unused FSLogix profile before deleting it."
      }
    },
    "Environment": {
      "type": "string",
      "defaultValue": "d",
      "metadata": {
        "description": "The environment short name used for naming resources in the solution."
      },
      "allowedValues": [
        "d",
        "p",
        "s",
        "t"
      ]
    },
    "FileShareResourceIds": {
      "type": "array",
      "metadata": {
        "description": "The resource IDs of the files shares containing the FSLogix profile and / or ODFC containers."
      }
    },
    "Frequency": {
      "type": "string",
      "metadata": {
        "description": "The frequency in which to check for expired VHDs."
      },
      "allowedValues": [
        "Day",
        "Week",
        "Month"
      ]
    },
    "HybridUseBenefit": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Choose whether to enable the Hybrid Use Benefit on the virtual machine.  This is only valid you have appropriate licensing with Software Assurance. https://docs.microsoft.com/en-us/windows-server/get-started/azure-hybrid-benefit"
      }
    },
    "Identifier": {
      "type": "string",
      "defaultValue": "avd",
      "metadata": {
        "description": "The unique identifier between each business unit or project supporting AVD in your tenant. This is the unique naming component between each AVD stamp."
      },
      "maxLength": 3
    },
    "JobScheduleName": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "DO NOT MODIFY THIS VALUE! The name of the Job Schedule must be set as a unique GUID during each deployment."
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The deployment location for the solution."
      }
    },
    "LogAnalyticsWorkspaceResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID for the Log Analytics Workspace to collect log data and send alerts."
      }
    },
    "RecurrenceDateTime": {
      "type": "string",
      "defaultValue": "2023-01-01T23:00:00",
      "metadata": {
        "description": "The date and time the tool should run weekly. Ideally select a time when most or all users will offline."
      }
    },
    "SubnetName": {
      "type": "string",
      "defaultValue": "Clients",
      "metadata": {
        "description": "The subnet for the AVD session hosts."
      }
    },
    "Tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Add key / value pairs to include metadata on the Azure resources."
      }
    },
    "VirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Virtual network for the virtual machine to run the tool."
      }
    },
    "VirtualNetworkResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Virtual network resource group for the virtual machine to run the tool."
      }
    },
    "VmPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The local administrator password for the virtual machine."
      }
    },
    "VmSize": {
      "type": "string",
      "defaultValue": "Standard_D4ds_v5",
      "metadata": {
        "description": "The size of the virutal machine that will process the Azure Files shares."
      }
    },
    "VmUsername": {
      "type": "securestring",
      "metadata": {
        "description": "The local administrator username for the virtual machine."
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
      "contentVersion": "1.0.0.0",
      "metadata": {
        "_generator": {
          "name": "bicep",
          "version": "0.16.1.55165",
          "templateHash": "9341956204983815761"
        }
      },
      "parameters": {
        "_artifactsLocation": {
          "type": "string"
        },
        "_artifactsLocationSasToken": {
          "type": "securestring",
          "defaultValue": ""
        },
        "DeleteOlderThanDays": {
          "type": "int"
        },
        "DiskName": {
          "type": "string"
        },
        "FileShareResourceIds": {
          "type": "array"
        },
        "HybridUseBenefit": {
          "type": "bool"
        },
        "KeyVaultName": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "NicName": {
          "type": "string"
        },
        "SubnetName": {
          "type": "string"
        },
        "Tags": {
          "type": "object"
        },
        "Timestamp": {
          "type": "string",
          "defaultValue": "[[utcNow('yyyyMMddhhmmss')]"
        },
        "UserAssignedIdentityClientId": {
          "type": "string"
        },
        "UserAssignedIdentityResourceId": {
          "type": "string"
        },
        "VirtualNetworkName": {
          "type": "string"
        },
        "VirtualNetworkResourceGroupName": {
          "type": "string"
        },
        "VmName": {
          "type": "string"
        },
        "VmPassword": {
          "type": "securestring"
        },
        "VmSize": {
          "type": "string"
        },
        "VmUsername": {
          "type": "securestring"
        }
      },
      "variables": {
        "StorageAccountSuffix": "[[environment().suffixes.storage]"
      },
      "resources": [
        {
          "type": "Microsoft.Network/networkInterfaces",
          "apiVersion": "2020-05-01",
          "name": "[[parameters('NicName')]",
          "location": "[[parameters('Location')]",
          "tags": "[[parameters('Tags')]",
          "properties": {
            "ipConfigurations": [
              {
                "name": "ipconfig",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[[resourceId(parameters('VirtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetworkName'), parameters('SubnetName'))]"
                  },
                  "primary": true,
                  "privateIPAddressVersion": "IPv4"
                }
              }
            ],
            "enableAcceleratedNetworking": true,
            "enableIPForwarding": false
          }
        },
        {
          "type": "Microsoft.Compute/virtualMachines",
          "apiVersion": "2021-11-01",
          "name": "[[parameters('VmName')]",
          "location": "[[parameters('Location')]",
          "tags": "[[parameters('Tags')]",
          "identity": {
            "type": "UserAssigned",
            "userAssignedIdentities": {
              "[[format('{0}', parameters('UserAssignedIdentityResourceId'))]": {}
            }
          },
          "properties": {
            "hardwareProfile": {
              "vmSize": "[[parameters('VmSize')]"
            },
            "storageProfile": {
              "imageReference": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2019-Datacenter",
                "version": "latest"
              },
              "osDisk": {
                "deleteOption": "Delete",
                "osType": "Windows",
                "createOption": "FromImage",
                "caching": "ReadWrite",
                "managedDisk": {
                  "storageAccountType": "Premium_LRS"
                },
                "name": "[[parameters('DiskName')]"
              },
              "dataDisks": []
            },
            "osProfile": {
              "computerName": "[[parameters('VmName')]",
              "adminUsername": "[[parameters('VmUsername')]",
              "adminPassword": "[[parameters('VmPassword')]",
              "windowsConfiguration": {
                "provisionVMAgent": true,
                "enableAutomaticUpdates": false
              },
              "secrets": [],
              "allowExtensionOperations": true
            },
            "networkProfile": {
              "networkInterfaces": [
                {
                  "id": "[[resourceId('Microsoft.Network/networkInterfaces', parameters('NicName'))]",
                  "properties": {
                    "deleteOption": "Delete"
                  }
                }
              ]
            },
            "diagnosticsProfile": {
              "bootDiagnostics": {
                "enabled": false
              }
            },
            "licenseType": "[[if(parameters('HybridUseBenefit'), 'Windows_Server', null())]"
          },
          "dependsOn": [
            "[[resourceId('Microsoft.Network/networkInterfaces', parameters('NicName'))]"
          ]
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "apiVersion": "2021-03-01",
          "name": "[[format('{0}/{1}', parameters('VmName'), 'CustomScriptExtension')]",
          "location": "[[parameters('Location')]",
          "tags": "[[parameters('Tags')]",
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.10",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[[format('{0}Set-FslogixDiskSize.ps1{1}', parameters('_artifactsLocation'), parameters('_artifactsLocationSasToken'))]"
              ],
              "timestamp": "[[parameters('Timestamp')]"
            },
            "protectedSettings": {
              "commandToExecute": "[[format('powershell -ExecutionPolicy Unrestricted -File Set-FslogixDiskSize.ps1 -DeleteOlderThanDays {0} -Environment {1} -FileShareResourceIds {2} -KeyVaultName {3} -StorageAccountSuffix {4} -SubscriptionId {5} -TenantId {6} -UserAssignedIdentityClientId {7}', parameters('DeleteOlderThanDays'), environment().name, parameters('FileShareResourceIds'), parameters('KeyVaultName'), variables('StorageAccountSuffix'), subscription().subscriptionId, subscription().tenantId, parameters('UserAssignedIdentityClientId'))]"
            }
          },
          "dependsOn": [
            "[[resourceId('Microsoft.Compute/virtualMachines', parameters('VmName'))]"
          ]
        }
      ]
    },
    "AutomationAccountName": "[format('aa-{0}', variables('NamingStandard'))]",
    "DiskName": "[format('disk-{0}', variables('NamingStandard'))]",
    "KeyVaultName": "[format('kv-{0}', variables('NamingStandard'))]",
    "LocationShortName": "[variables('LocationShortNames')[parameters('Location')]]",
    "LocationShortNames": {
      "australiacentral": "ac",
      "australiacentral2": "ac2",
      "australiaeast": "ae",
      "australiasoutheast": "as",
      "brazilsouth": "bs2",
      "brazilsoutheast": "bs",
      "canadacentral": "cc",
      "canadaeast": "ce",
      "centralindia": "ci",
      "centralus": "cu",
      "eastasia": "ea",
      "eastus": "eu",
      "eastus2": "eu2",
      "francecentral": "fc",
      "francesouth": "fs",
      "germanynorth": "gn",
      "germanywestcentral": "gwc",
      "japaneast": "je",
      "japanwest": "jw",
      "jioindiacentral": "jic",
      "jioindiawest": "jiw",
      "koreacentral": "kc",
      "koreasouth": "ks",
      "northcentralus": "ncu",
      "northeurope": "ne",
      "norwayeast": "ne2",
      "norwaywest": "nw",
      "southafricanorth": "san",
      "southafricawest": "saw",
      "southcentralus": "scu",
      "southeastasia": "sa",
      "southindia": "si",
      "swedencentral": "sc",
      "switzerlandnorth": "sn",
      "switzerlandwest": "sw",
      "uaecentral": "uc",
      "uaenorth": "un",
      "uksouth": "us",
      "ukwest": "uw",
      "usdodcentral": "uc",
      "usdodeast": "ue",
      "usgovarizona": "az",
      "usgoviowa": "ia",
      "usgovtexas": "tx",
      "usgovvirginia": "va",
      "westcentralus": "wcu",
      "westeurope": "we",
      "westindia": "wi",
      "westus": "wu",
      "westus2": "wu2",
      "westus3": "wu3"
    },
    "NamingStandard": "[format('{0}-{1}-{2}-fslogix', parameters('Identifier'), parameters('Environment'), variables('LocationShortName'))]",
    "NicName": "[format('nic-{0}', variables('NamingStandard'))]",
    "RoleAssignmentResourceGroups": [
      "[resourceGroup().name]",
      "[parameters('VirtualNetworkResourceGroupName')]"
    ],
    "RoleDefinitionIds": {
      "KeyVaultSecretsUser": "4633458b-17de-408a-b874-0445c86b69e6",
      "ManagedIdentityOperator": "f1a07417-d97a-45cb-824c-7a7467783830",
      "Reader": "acdd72a7-3385-48ef-bd42-f606fba81ae7"
    },
    "RunbookName": "FslogixDiskShrink",
    "RunbookScriptName": "Set-FslogixDiskShrinkVirtualMachine.ps1",
    "TemplateSpecName": "[format('ts-{0}', variables('NamingStandard'))]",
    "TimeZone": "[variables('TimeZones')[parameters('Location')]]",
    "TimeZones": {
      "australiacentral": "AUS Eastern Standard Time",
      "australiacentral2": "AUS Eastern Standard Time",
      "australiaeast": "AUS Eastern Standard Time",
      "australiasoutheast": "AUS Eastern Standard Time",
      "brazilsouth": "E. South America Standard Time",
      "brazilsoutheast": "E. South America Standard Time",
      "canadacentral": "Eastern Standard Time",
      "canadaeast": "Eastern Standard Time",
      "centralindia": "India Standard Time",
      "centralus": "Central Standard Time",
      "chinaeast": "China Standard Time",
      "chinaeast2": "China Standard Time",
      "chinanorth": "China Standard Time",
      "chinanorth2": "China Standard Time",
      "eastasia": "China Standard Time",
      "eastus": "Eastern Standard Time",
      "eastus2": "Eastern Standard Time",
      "francecentral": "Central Europe Standard Time",
      "francesouth": "Central Europe Standard Time",
      "germanynorth": "Central Europe Standard Time",
      "germanywestcentral": "Central Europe Standard Time",
      "japaneast": "Tokyo Standard Time",
      "japanwest": "Tokyo Standard Time",
      "jioindiacentral": "India Standard Time",
      "jioindiawest": "India Standard Time",
      "koreacentral": "Korea Standard Time",
      "koreasouth": "Korea Standard Time",
      "northcentralus": "Central Standard Time",
      "northeurope": "GMT Standard Time",
      "norwayeast": "Central Europe Standard Time",
      "norwaywest": "Central Europe Standard Time",
      "southafricanorth": "South Africa Standard Time",
      "southafricawest": "South Africa Standard Time",
      "southcentralus": "Central Standard Time",
      "southindia": "India Standard Time",
      "southeastasia": "Singapore Standard Time",
      "swedencentral": "Central Europe Standard Time",
      "switzerlandnorth": "Central Europe Standard Time",
      "switzerlandwest": "Central Europe Standard Time",
      "uaecentral": "Arabian Standard Time",
      "uaenorth": "Arabian Standard Time",
      "uksouth": "GMT Standard Time",
      "ukwest": "GMT Standard Time",
      "usdodcentral": "Central Standard Time",
      "usdodeast": "Eastern Standard Time",
      "usgovarizona": "Mountain Standard Time",
      "usgoviowa": "Central Standard Time",
      "usgovtexas": "Central Standard Time",
      "usgovvirginia": "Eastern Standard Time",
      "westcentralus": "Mountain Standard Time",
      "westeurope": "Central Europe Standard Time",
      "westindia": "India Standard Time",
      "westus": "Pacific Standard Time",
      "westus2": "Pacific Standard Time",
      "westus3": "Mountain Standard Time"
    },
    "UserAssignedIdentityName": "[format('uai-{0}', variables('NamingStandard'))]",
    "VmName": "[format('vm-{0}', variables('NamingStandard'))]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[variables('UserAssignedIdentityName')]",
      "location": "[parameters('Location')]"
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('TemplateSpecName')]",
      "location": "[parameters('Location')]",
      "properties": {
        "description": "Deploys a virtual machine to run the \"FSLogix Disk Shrink\" tool against an SMB share containing FSLogix profile containers.",
        "displayName": "FSLogix Disk Shrink solution"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[format('{0}/{1}', variables('TemplateSpecName'), '1.0')]",
      "location": "[parameters('Location')]",
      "properties": {
        "mainTemplate": "[variables('$fxv#0')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('TemplateSpecName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts",
      "apiVersion": "2021-06-22",
      "name": "[variables('AutomationAccountName')]",
      "location": "[parameters('Location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "sku": {
          "name": "Free"
        }
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "apiVersion": "2019-06-01",
      "name": "[format('{0}/{1}', variables('AutomationAccountName'), variables('RunbookName'))]",
      "location": "[parameters('Location')]",
      "properties": {
        "description": "FSLogix Disk Shrink Automation",
        "runbookType": "PowerShell",
        "logProgress": false,
        "logVerbose": false,
        "logActivityTrace": 0,
        "publishContentLink": {
          "uri": "[format('{0}{1}{2}', parameters('_artifactsLocation'), variables('RunbookScriptName'), parameters('_artifactsLocationSasToken'))]",
          "version": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "name": "[guid(resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName')), variables('RoleDefinitionIds').Reader, resourceGroup().id)]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('RoleDefinitionIds').Reader)]",
        "principalId": "[reference(resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName')), '2021-06-22', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "name": "[guid(resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName')), variables('RoleDefinitionIds').ManagedIdentityOperator, resourceGroup().id)]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('RoleDefinitionIds').ManagedIdentityOperator)]",
        "principalId": "[reference(resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName')), '2021-06-22', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-10-01",
      "name": "[variables('KeyVaultName')]",
      "location": "[parameters('Location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": false,
        "enableRbacAuthorization": true,
        "enableSoftDelete": false,
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "condition": "[not(empty(parameters('_artifactsLocationSasToken')))]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-10-01",
      "name": "[format('{0}/{1}', variables('KeyVaultName'), 'SasToken')]",
      "properties": {
        "value": "[parameters('_artifactsLocationSasToken')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-10-01",
      "name": "[format('{0}/{1}', variables('KeyVaultName'), 'VmPassword')]",
      "properties": {
        "value": "[parameters('VmPassword')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-10-01",
      "name": "[format('{0}/{1}', variables('KeyVaultName'), 'VmUsername')]",
      "properties": {
        "value": "[parameters('VmUsername')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('KeyVaultName'))]",
      "name": "[guid(resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName')), variables('RoleDefinitionIds').KeyVaultSecretsUser, resourceGroup().id)]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('RoleDefinitionIds').KeyVaultSecretsUser)]",
        "principalId": "[reference(resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName')), '2021-06-22', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('KeyVaultName'))]",
      "name": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('UserAssignedIdentityName')), variables('RoleDefinitionIds').KeyVaultSecretsUser, resourceGroup().id)]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('RoleDefinitionIds').KeyVaultSecretsUser)]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('UserAssignedIdentityName')), '2018-11-30').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('UserAssignedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/schedules",
      "apiVersion": "2022-08-08",
      "name": "[format('{0}/{1}', variables('AutomationAccountName'), format('{0}_{1}', variables('RunbookName'), parameters('Frequency')))]",
      "properties": {
        "frequency": "Day",
        "interval": 1,
        "startTime": "[parameters('RecurrenceDateTime')]",
        "timeZone": "[variables('TimeZone')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/jobSchedules",
      "apiVersion": "2022-08-08",
      "name": "[format('{0}/{1}', variables('AutomationAccountName'), parameters('JobScheduleName'))]",
      "properties": {
        "parameters": {
          "_artifactsLoction": "[parameters('_artifactsLocation')]",
          "DeleteOlderThanDays": "[string(parameters('DeleteOlderThanDays'))]",
          "DiskName": "[variables('DiskName')]",
          "EnvironmentName": "[environment().name]",
          "FileShareResourceIds": "[string(parameters('FileShareResourceIds'))]",
          "HybridUseBenefit": "[string(parameters('HybridUseBenefit'))]",
          "KeyVaultName": "[variables('KeyVaultName')]",
          "Location": "[parameters('Location')]",
          "NicName": "[variables('NicName')]",
          "ResourceGroupName": "[resourceGroup().name]",
          "SubnetName": "[parameters('SubnetName')]",
          "SubscriptionId": "[subscription().subscriptionId]",
          "Tags": "[string(parameters('Tags'))]",
          "TemplateSpecId": "[resourceId('Microsoft.Resources/templateSpecs/versions', variables('TemplateSpecName'), '1.0')]",
          "TenantId": "[subscription().tenantId]",
          "UserAssignedIdentityClientId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('UserAssignedIdentityName')), '2018-11-30').clientId]",
          "UserAssignedIdentityResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('UserAssignedIdentityName'))]",
          "VirtualNetworkName": "[parameters('VirtualNetworkName')]",
          "VirtualNetworkResourceGroupName": "[parameters('VirtualNetworkResourceGroupName')]",
          "VmName": "[variables('VmName')]",
          "VmSize": "[parameters('VmSize')]"
        },
        "runbook": {
          "name": "[variables('RunbookName')]"
        },
        "schedule": {
          "name": "[format('{0}_{1}', variables('RunbookName'), parameters('Frequency'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]",
        "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('AutomationAccountName'), variables('RunbookName'))]",
        "[resourceId('Microsoft.Automation/automationAccounts/schedules', variables('AutomationAccountName'), format('{0}_{1}', variables('RunbookName'), parameters('Frequency')))]",
        "[resourceId('Microsoft.Resources/templateSpecs/versions', variables('TemplateSpecName'), '1.0')]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('UserAssignedIdentityName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('LogAnalyticsWorkspaceResourceId')))]",
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.Automation/automationAccounts/{0}', variables('AutomationAccountName'))]",
      "name": "[format('diag-{0}', variables('AutomationAccountName'))]",
      "properties": {
        "logs": [
          {
            "category": "JobLogs",
            "enabled": true
          },
          {
            "category": "JobStreams",
            "enabled": true
          }
        ],
        "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName'))]"
      ]
    },
    {
      "copy": {
        "name": "roleAssignments_VirtualMachineContributor",
        "count": "[length(range(0, length(variables('RoleAssignmentResourceGroups'))))]",
        "mode": "serial",
        "batchSize": 1
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('RoleAssignment_{0}', variables('RoleAssignmentResourceGroups')[range(0, length(variables('RoleAssignmentResourceGroups')))[copyIndex()]])]",
      "resourceGroup": "[variables('RoleAssignmentResourceGroups')[range(0, length(variables('RoleAssignmentResourceGroups')))[copyIndex()]]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "AutomationAccountId": {
            "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName')), '2021-06-22', 'full').identity.principalId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.1.55165",
              "templateHash": "2385782021182848203"
            }
          },
          "parameters": {
            "AutomationAccountId": {
              "type": "string"
            }
          },
          "variables": {
            "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid(parameters('AutomationAccountId'), variables('RoleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('RoleDefinitionId'))]",
                "principalId": "[parameters('AutomationAccountId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('AutomationAccountName'))]"
      ]
    }
  ]
}